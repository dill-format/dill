#+TITLE: Dill format specification v1.0.0
#+AUTHOR: noisytoot, olive-oyl
* File extension
  .toml or .dill

* The shebang line
  Dill files can begin with a shebang line (example: "=#!/path/to/dill read="), usually "=#!/usr/local/bin/dill read="

* The =[meta]= section
  Documents should contain the =[meta]= section.
  - The string =format= :: should be set to "Dill" (key not case sensitive)
  - The string =version.toml= :: the version of toml
  - The string =version.dill= :: the version of Dill
  - The string =document.language= :: the ISO 639-3 code of the language that the document is in, if an ISO 639-3 code is not available then just the name of the language

* The =[define]= section
 This section is used to define custom keys. Once defined the will be recognised by the Dill program accordingly replaced with the value.

 For example if you have a define section as following:
 #+BEGIN_SRC toml
 [define]
 cat = "Some meowing furry animal"
 #+END_SRC
 then the Dill program will read =custom.cat= as 'Some meowing furry animal'
 
 the key must be a string

* The =[data]= section
  The =location= key has 4 following sub keys: =pluscode=, =latlong=, =address=, =postcode=.
  
  All sub-keys have modifiers at the end example like =Home=, =Work=, etc. (anything you would like Dill to display)
  
  Examples: =location.pluscode.Home=, =location.latlong.Work=, =location.postcode.Overseas=
  
  All of location sub keys are strings except for =location.latlong= which is an array of decimals
  
  The order of elements in the =location.latlong= array is: first latitude, then longitude
  
  All sub keys of =location=, and =contact= should have modifiers. Examples for =contact.phone=, and =contact.email= - Home, Work, etc. Examples for =contact.username= - GitHub, Twitter, etc.
  - The string =name.first= :: first name
  - The string =name.middle= :: middle name
  - The string =name.last= :: last name
  - The date =birthdate= :: the birthdate
  - The string =organization= :: organization
  - The =contact= key has 3 sub keys :: phone, email and username. All sub keys are of type Hashtable.
  - The array =citizenships= :: citizenship/citizenships
  - The string =website= :: website
  - The string =description= :: a description
  - The array =languages.fluent= :: fluent languages, ISO 639-3 Codes if available, if not then the name of the language
  - The string =job= :: job
  - The string =gender= :: gender

* Non-standard extensions
There are two types of non-standard extentions: ones beginning with =extension.= and ones beginning with =custom.=.
- First category (beginning with extention.) :: should be called =extension."Whatever you want it to be"=.
- Second category (beginning with custom.) :: extentions should be called =custom.'Whatever you want it to be'=, unless they are defined in =[define]= section.
 
